heat_template_version: 2015-10-15

description: |
 #### Parse, Secondary

parameter_groups:

parameters:
  server_name:
    type: string
    default: example-0
  server_flavor:
    type: string
    default: 4 GB General Purpose v1
    constraints:
    - allowed_values:
      - 1 GB General Purpose v1
      - 2 GB General Purpose v1
      - 4 GB General Purpose v1
      - 8 GB General Purpose v1
  server_image:
    type: string
    default: Ubuntu 14.04 LTS (Trusty Tahr) (PVHVM) (Orchestration)
    constraints:
    - allowed_values:
      - Ubuntu 14.04 LTS (Trusty Tahr) (PVHVM) (Orchestration)
  ssh_key:
    type: string
    label: SSH Key
    description: SSH Key for Parse Slave Nodes
  parent_stack_id:
    type: string
    default: None
  apache_default_domain:
    type: string
    default: exmaple.com
  master_server:
    type: string
  ansible_source:
    type: string
    default: http://catalog.rs-heat.com/ansible-roles/ansible-roles.tar.gz
    label: Ansible Tarball
    description: The Ansible Roles will be pulled from the location provided
    immutable: true
  parse_pass:
    type: string
    default: ""
  rc_network_name:
    type: string
    label: RackConnect Network
    description: Name or UUID of RackConnected network to attach this server to
    constraints:
    - custom_constraint: rackconnect.network
    immutable: true
resources:
  upload_role_config:
    type: OS::Heat::SoftwareConfig
    properties:
      group: script
      outputs:
      - name: results
      config:
        str_replace:
          template: |
            #!/bin/bash
            set -e
            mkdir -p /etc/ansible/roles
            wget ansible_source -O /tmp/ansible-roles.tar.gz 2>&1
            tar -xf /tmp/ansible-roles.tar.gz --strip-components=1 -C /etc/ansible/roles
          params:
            ansible_source: { get_param: ansible_source }

  parse_config:
    type: OS::Heat::SoftwareConfig
    properties:
      group: ansible
      config: |
        ---
        - name: Install and configure Parse
          hosts: localhost
          connection: local
          roles:
          - common
          - nginx
          - parse
          - firewall
  deploy_roles:
    type: OS::Heat::SoftwareDeployment
    properties:
      signal_transport: TEMP_URL_SIGNAL
      config:
        get_resource: upload_role_config
      server:
        get_resource: parse_server
  deploy_parse:
    type: OS::Heat::SoftwareDeployment
    depends_on: deploy_roles
    properties:
      signal_transport: TEMP_URL_SIGNAL
      input_values:
        nginx_vhost_str: { get_param: apache_default_domain }
        nginx_vhost_template: "parse"
        parse_cloud_code_main: ""
        parse_database_uri: ""
        parse_application_id: ""
        parse_master_key: ""
        parse_collection_prefix: ""
        parse_client_key: ""
        parse_rest_api_key: ""
        parse_dotnet_key: ""
        parse_javascript_key: ""
        parse_file_key: ""
        parse_facebook_app_ids: ""
        parse_git_key: ""
        parse_git_repo: ""
        parse_pass: { get_param: parse_pass }
        tz: "America/Chicago"
      config:
        get_resource: parse_config
      server:
        get_resource: parse_server
  parse_server:
    type: OS::Nova::Server
    properties:
      name: { get_param: server_name }
      key_name: { get_param: ssh_key }
      image: { get_param: server_image }
      flavor: { get_param: server_flavor }
      software_config_transport: POLL_TEMP_URL
      config_drive: true
      user_data_format: SOFTWARE_CONFIG
      networks:
      - network: { get_param: rc_network_name }
      - network: 11111111-1111-1111-1111-111111111111
      metadata:
        rax-heat: { get_param: "parent_stack_id" }
        build_config: "monitoring_defaults"
  parse_server_public_ip:
    type: Rackspace::RackConnect::PublicIP
    depends_on: parse_server
    properties:
      server_id: { get_resource: parse_server }
  parse_server_http_check:
    type: Rackspace::CloudMonitoring::Check
    depends_on: deploy_parse
    properties:
      entity: { get_resource: parse_server }
      type: remote.http
      label:
        str_replace:
          template: stack Node HTTP Check
          params:
            stack: { get_param: "OS::stack_name" }
      details:
        url:
          str_replace:
            template: "http://ipaddr"
            params:
              ipaddr: { get_attr: [parse_server, accessIPv4] }
      metadata:
        rax-heat: { get_param: "OS::stack_id" }
        stack-name: { get_param: "OS::stack_name" }
      period: 120
      timeout: 10
      monitoring_zones_poll:
      - Northern Virginia (IAD)
      - Chicago (ORD)
      - Dallas Fort Worth (DFW)
      - London (LON)
      target_hostname: { get_attr: [parse_server, accessIPv4] }
      target_receiver: IPv4

outputs:
  public_ip:
    description: Server Public IP
    value:
      get_attr: [parse_server, accessIPv4]
  private_ip:
    description: Server Private IP
    value:
      get_attr: [parse_server, networks, private, 0]
